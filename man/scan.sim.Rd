% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scan.sim.R
\name{scan.sim}
\alias{scan.sim}
\title{Perform \code{scan.test} on simualated data}
\usage{
scan.sim(nsim = 1, zones, ty, ex, type = "poisson", ein = NULL,
  eout = NULL, tpop = NULL, popin = NULL, popout = NULL,
  cl = NULL)
}
\arguments{
\item{nsim}{A positive integer indicating the number of
simulations to perform.}

\item{zones}{A list of zones to compute the test statistic
over for each simulated data set.}

\item{ty}{The total number of cases in the study area.}

\item{ex}{The expected number of cases for each region.
The default is calculated under the constant risk
hypothesis.}

\item{type}{The type of scan statistic to implement.
Default is \code{"poisson"}.  Only \code{"poisson"} is
currently implemented.}

\item{ein}{The expected number of cases in the zone.
Conventionally, this is the estimated overall disease
risk across the study area, multiplied by the total
population size of the zone.}

\item{eout}{The expected number of cases outside the
zone.  This should be \code{ty - ein} and is computed
automatically if not provided.}

\item{tpop}{The total population in the study area.}

\item{popin}{The total population in the zone.}

\item{popout}{The population outside the zone.  This
should be \code{tpop - popin} and is computed
automatically if not provided.}

\item{cl}{
A cluster object created by \code{\link[parallel]{makeCluster}},
or an integer to indicate number of child-processes
(integer values are ignored on Windows) for parallel evaluations.
}
}
\value{
A vector with the maximum test statistic for each
  simulated data set.
}
\description{
\code{scan.sim} efficiently performs
\code{\link{scan.test}} on a simulated data set.  The
function is meant to be used internally by the
\code{\link{scan.test}} function, but is informative for
better understanding the implementation of the test.
}
\details{
\code{scan.sim} and \code{flex.sim} are identicial, as
the only thing that changes is the \code{zones} considered.
}
\examples{
data(nydf)
coords = with(nydf, cbind(longitude, latitude))
zones = scan.zones(coords, pop = nydf$pop, longlat = TRUE, ubpop = 0.1)
cases = floor(nydf$cases)
ty = sum(cases)
ex = ty/sum(nydf$pop) * nydf$pop
yin = sapply(zones, function(x) sum(cases[x]))
ein = sapply(zones, function(x) sum(ex[x]))
tsim = scan.sim(nsim = 2, zones, ty, ex, ein = ein, eout = ty - ein)
}
